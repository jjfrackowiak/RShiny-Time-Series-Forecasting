yq
"2019-12-31"
yq <- as.yearqtr(as.Date("2019-12-31"))
yq
seq(as.Date("2000/1/1"), as.Date("2003/1/1"), by = "quarter")
seq(as.Date("2019-12-31"), as.Date("2018-06-30"), by = "quarter")
seq(as.Date("2019-12-31"), as.Date("2018-06-30"), by = "quarter")
seq(as.Date("2018-06-30"),as.Date("2019-12-31"), by = "quarter")
c=seq(as.Date("2018-06-30"),as.Date("2019-12-31"), by = "quarter")
yq <- as.yearqtr(c)
yq
df = cbind("x"=c(1,5,3,8,3,56,8),"y"=c(7,5,1,4,6,98,21))
install.packages("DataCombine")
library(DataCombine)
PercChange(df,"x",slideBy = -1,type = "percent")
df = cbind("x"=c(1,5,3,8,3,56,8),"y"=c(7,5,1,4,6,98,21))
df = cbind("x"=c(1,5,3,8,3,56,8),"y"=c(7,5,1,4,6,98,21))
df
df = data.frame("x"=c(1,5,3,8,3,56,8),"y"=c(7,5,1,4,6,98,21))
PercChange(df,"x",slideBy = -1,type = "percent")
change(df,"x",slideBy = -1,type = "percent")
change(df,c("x","y"),slideBy = -1,type = "percent")
q()
reticulate::repl_python()
import pandas as pd
Y
import pandas as pd
import pandas as pd
quit
k
2
reticulate::repl_python()
import pandas as pd
pip install pip
import os
os.chdir()
import pandas as pd
import sys
sys.path
import pandas as pd
use_python()
use_python()
py_install(pandas)
library(reticulate)
library(reticulate)
use_python()
reticulate::repl_python()
import os
import pandas as pd
install.packages("RSelenium")
library(RSelenium)
checkForServer()
rD <- rsDriver()
paste("a")=5
paste("a","b")
month = "april"
assign(paste("var_",month,sep=""),5)
shiny::runApp('C:/Users/shash/Desktop/Testin')
install.packages("mice")
data = file.choose()
data
data = read.csv(data)
data
plot(data[,"petal length"])
data = file.choose()
data = read.csv(data)
data
plot(data[,"petal length"])
plot(data[,"petal.length"])
1+1
library(shiny)
install.packages("shinythemes")
library(shinythemes)
shiny::runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
install.packages("bslib")
library(bslib)
shiny::runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/Example')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
runApp('C:/Users/shash/Desktop/Dash/app')
library(plotly)
library(quantmod)
data=read.csv(file.choose())
temp=data
data=temp
View(temp)
data[,1] <- as.Date(data$ï..Date,"%d-%b-%y")
data[,c(2)] <- as.double(gsub(",","",data[,c(2)]))
data[,c(3)] <- as.double(gsub(",","",data[,c(3)]))
data[,c(4)] <- as.double(gsub(",","",data[,c(4)]))
data[,c(5)] <- as.double(gsub(",","",data[,c(5)]))
fig=plot_ly(data,type="candlestick",open = data$Open, high = data$High, low = data$Low)
fig <- layout(fig, title = "Basic Candlestick Chart")
fig
data=getSymbols("AAPL",src='yahoo')
df <- data.frame(Date=index(AAPL),coredata(AAPL))
df <- tail(df, 30)
(
df <- data.frame(Date=index(AAPL),coredata(AAPL))
View(df)
data=read.csv(file.choose())
temp=data
data=temp
data[,1] <- as.Date(data$ï..Date,"%d-%b-%y")
data[,c(2)] <- as.double(gsub(",","",data[,c(2)]))
data[,c(3)] <- as.double(gsub(",","",data[,c(3)]))
data[,c(4)] <- as.double(gsub(",","",data[,c(4)]))
data[,c(5)] <- as.double(gsub(",","",data[,c(5)]))
fig=plot_ly(data,x=data$ï..Date,type="candlestick",open = data$Open, high = data$High, low = data$Low)
fig <- layout(fig, title = "Basic Candlestick Chart")
fig
View(data)
fig
fig <- layout(fig,title = "Basic Candlestick Chart",xaxis = list(rangeslider = list(visible = F)))
fig
chartSeries(data)
View(AAPL)
stock=getSymbols("AAPL",src='yahoo')
stock=getSymbols("AAPL",src='yahoo')
chartSeries(stock)
Amazon<-getSymbols("AMZN",
from = "2020-01-01",
to = "2021-03-17",
periodicity = "daily",
auto.assign=FALSE)
chartSeries(Amazon, name="Amazon Chart")
chartSeries(stock, name="Amazon Chart")
View(Amazon)
stock=getSymbols("AAPL",src='yahoo',auto.assign=FALSE)
View(data)
xdata <-as.xts(data)
xdata <-xts[data[,2,3,4,5],data[,1]]
xdata <-xts[data[,c(2,3,4,5)],data[,1]]
data[,c(2,3,4,5)
[,c(2,3,4,5)]
data[,c(2,3,4,5)]
data[,1]
xdata <-as.xts[data[,c(2,3,4,5)],data[,1]]
xdata <-xts(data[,c(2,3,4,5)],data[,1])
xdata
View(xdata)
chartSeries(xdata)
chartSeries(xdata,type = "candlesticks")
View(xdata)
names(xdata)<- c("Close","Open", "High","Low")
chartSeries(xdata,type = "candlesticks")
install.packages("xts")
library(xts)
f = dygraph(xdata)
library(xts)
f = dygraph(xdata)
install.packages("dygraphs")
library(dygraphs)
f = dygraph(xdata)
dyCandlestick(f)
shiny::runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp()
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
runApp('C:/Users/shash/Desktop/Shiny/Line-Chart')
shiny::runApp()
source('C:/Users/shash/Desktop/Shiny/Job3 - Movie Recommendation/Job2_Dashboard_v2/Launcher.R')
runApp('app')
runApp('app')
runApp('app')
runApp('app')
rating <- read.csv(file.choose())
rating_data <- rating_data[rating_data[,1]==1,]
rating <- rating[rating[,1]==1,]
View(rating)
rating <- rating[rating[,1]=="1",]
runApp('app')
runApp('app')
runApp('app')
library(shiny); source('Launcher.R')
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
getwd()
setwd("D:/UW/Summer semester 2020/Adv programming in R/Project")
read.csv(ratings.csv)
library(readr)
ratings <- read_csv("ratings.csv")
View(ratings)
length(unique(ratings$userId))
length(ratings$userId[ratings$userId == 1])
length(ratings$userId[ratings$userId == 2])
length(ratings$userId[ratings$userId == 79])
length(ratings$userId[ratings$userId == 50])
length(ratings$userId[ratings$userId == 38])
length(ratings$userId[ratings$userId == 80])
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
length(ratings$userId[ratings$userId == 80])
length(ratings$userId[ratings$userId == 81])
length(ratings$userId[ratings$userId == 89])
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
length(ratings$userId[ratings$userId == 120])
length(ratings$userId[ratings$userId == 121])
length(ratings$userId[ratings$userId == 129])
length(ratings$userId[ratings$userId == 125])
length(ratings$userId[ratings$userId == 150])
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
library(shiny); source('Launcher.R')
# install.packages("shiny")
install.packages("tidyquant")
source('Launcher.R')
# install.packages("shinythemes")
# install.packages("zoo")
# install.packages("recommenderlab")
# install.packages("data.table")
# install.packages("reshape2")
# install.packages("tidyr")
# install.packages("zoo")
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
install.packages("shinythemes")
# install.packages("shinythemes")
# install.packages("zoo")
# install.packages("recommenderlab")
# install.packages("data.table")
# install.packages("reshape2")
# install.packages("tidyr")
# install.packages("zoo")
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
install.packages("shinythemes")
##### Install theses packages on first run ####
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("zoo")
# install.packages("recommenderlab")
# install.packages("data.table")
# install.packages("reshape2")
# install.packages("tidyr")
# install.packages("zoo")
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("dtplyr")
# install.packages("dplyr")
# install.packages("R6")
# install.packages("PBSmodelling")
# install.packages("rmarkdown")
# install.packages("shinybusy")
# install.packages("shinycssloaders")
##############################################
# You need to install tinytex for generating teh PDF
# tinytex::install_tinytex()
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("dtplyr")
# install.packages("dplyr")
# install.packages("R6")
# install.packages("PBSmodelling")
# install.packages("rmarkdown")
# install.packages("shinybusy")
# install.packages("shinycssloaders")
install.packages("dygraphs")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("dtplyr")
# install.packages("dplyr")
# install.packages("R6")
# install.packages("PBSmodelling")
# install.packages("rmarkdown")
# install.packages("shinybusy")
# install.packages("shinycssloaders")
install.packages("dygraphs")
##### Install theses packages on first run ####
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("zoo")
# install.packages("recommenderlab")
# install.packages("data.table")
# install.packages("reshape2")
# install.packages("tidyr")
# install.packages("zoo")
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("dtplyr")
# install.packages("dplyr")
# install.packages("R6")
# install.packages("PBSmodelling")
# install.packages("rmarkdown")
# install.packages("shinybusy")
# install.packages("shinycssloaders")
# install.packages("dygraphs")
##############################################
# You need to install tinytex for generating teh PDF
# tinytex::install_tinytex()
library(dygraphs)
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
# install.packages("shiny")
# install.packages("tidyquant")
# install.packages("dplyr")
# install.packages("shinythemes")
# install.packages("zoo")
install.packages("recommenderlab")
##### Install theses packages on first run ####
install.packages("shiny")
install.packages("tidyquant")
install.packages("dplyr")
install.packages("shinythemes")
install.packages("zoo")
install.packages("recommenderlab")
install.packages("data.table")
install.packages("reshape2")
install.packages("tidyr")
install.packages("zoo")
install.packages("shiny")
install.packages("tidyquant")
install.packages("dplyr")
install.packages("shinythemes")
install.packages("dtplyr")
install.packages("dplyr")
install.packages("R6")
install.packages("PBSmodelling")
install.packages("rmarkdown")
install.packages("shinybusy")
install.packages("shinycssloaders")
install.packages("dygraphs")
##############################################
# You need to install tinytex for generating teh PDF
# tinytex::install_tinytex()
library(dygraphs)
library(shiny)
library(tidyquant)
library(dplyr)
library(shinythemes)
library(zoo)
library(recommenderlab)
library(data.table)
library(reshape2)
library(tidyr)
library(dtplyr)
library(dplyr)
library(R6)
library(PBSmodelling)
library(rmarkdown)
library(shinybusy)
library(shinycssloaders)
library(tinytex)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
install.packages("shiny")
install.packages("dplyr")
install.packages("zoo")
install.packages("reshape2")
install.packages("data.table")
install.packages("zoo")
install.packages("shinythemes")
install.packages("shinythemes")
install.packages("data.table")
install.packages("reshape2")
install.packages("zoo")
install.packages("shiny")
install.packages("dplyr")
install.packages("tidyquant")
install.packages("tidyquant")
install.packages("shiny")
install.packages("dplyr")
install.packages("zoo")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
runApp("app")
library(shiny); source('Launcher.R')
library(shiny); source('launcher.R')
