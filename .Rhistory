data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$x, data()$r,
xlim = c(0, 10),
ylim = c(0, 10))
if (input$line) {
arima_fit <- auto.arima(data()$r)
r_pred <- forecast(arima_fit, h = 10)
lines(1:10, r_pred$mean, col = "red")
}
})
output$selected_x <- renderText({
arima_fit <- auto.arima(data()$r)
r_pred <- forecast(arima_fit, h = 10)
pred_value <- r_pred$mean[as.numeric(input$number3)]
paste("Predicted value of the interest rate r for the selected x value: ", pred_value)
})
}
shinyApp(ui = ui, server = server)
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$r, type = "o", col = "blue",
xlab = "Index of Rows",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ seq_along(r), data = data())
abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = seq_along(data()$r))
lines(arima_fit$fitted, col = "red")
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 1)
}
})
output$selected_x <- renderText({
arima_fit <- arima(data()$r, order = c(1,1,0), xreg = seq_along(data()$r))
pred_value <- predict(arima_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
#abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = seq_along(data()$r))
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$r, type = "o", col = "blue",
xlab = "Index of Rows",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ seq_along(r), data = data())
#abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = seq_along(data()$r))
lines(arima_fit$fitted, col = "red")
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 1)
}
})
output$selected_x <- renderText({
arima_fit <- arima(data()$r, order = c(1,1,0), xreg = seq_along(data()$r))
pred_value <- predict(arima_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$r, type = "o", col = "blue",
xlab = "Index of Rows",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ seq_along(r), data = data())
#abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = seq_along(data()$r))
lines(arima_fit$fitted, col = "red")
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 3)
}
})
output$selected_x <- renderText({
arima_fit <- arima(data()$r, order = c(1,1,0), xreg = seq_along(data()$r))
pred_value <- predict(arima_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$r, type = "o", col = "blue",
xlab = "Index of Rows",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ seq_along(r), data = data())
#abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = seq_along(data()$r))
lines(arima_fit$fitted, col = "red",  lwd = 3)
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 3)
}
})
output$selected_x <- renderText({
arima_fit <- arima(data()$r, order = c(1,1,0), xreg = seq_along(data()$r))
pred_value <- predict(arima_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df <- ts(data[,-1], start = c(year(data$Date[1]), month(data$Date[1])), frequency = 365)
df
})
output$plot1 <- renderPlot({
plot(data(), type = "o", col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ time(data()), data = data())
arima_fit <- arima(data(), order = c(1, 0, 1), xreg = data()$x)
lines(arima_fit$fitted, col = "red",  lwd = 3)
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 3)
}
})
output$selected_x <- renderText({
arimax_fit <- arima(data(), order = c(1, 0, 1), xreg = data()$x))
pred_value <- predict(arimax_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df <- ts(data[,-1], start = c(year(data$Date[1]), month(data$Date[1])), frequency = 365)
df
})
output$plot1 <- renderPlot({
plot(data(), type = "o", col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
if(input$line) {
lm_fit <- lm(r ~ time(data()), data = data())
arimax_fit <- arima(data(), order = c(1, 0, 1), xreg = data()$x)
print(length(arimax_fit$fitted))
lines(arimax_fit$fitted, col = "red",  lwd = 3)
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 3)
}
})
output$selected_x <- renderText({
arimax_fit <- arima(data(), order = c(1, 0, 1), xreg = data()$x))
pred_value <- predict(arimax_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
library(shiny); runApp('TS-An.R')
data <- read.csv("random_data.csv", sep = ",")
plot(data$r, type = "o", col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
lm_fit <- lm(r ~ time(data), data = data)
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data()$x)
lines(arima_fit$fitted, col = "red", lwd = 3)
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 3)
time(data)
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data()$x)
lines(arima_fit$fitted, col = "red", lwd = 3)
plot(data$r, type = "o", #col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
plot(data$r, type = ".", #col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
plot(data$r, type = "x", #col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
plot(data$r, type = "o", #col = "blue",
xlab = "Date",
ylab = "Interest Rate Value (r)")
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data()$x)
lines(arima_fit$fitted, col = "red", lwd = 5)
arima_fit$fitted
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data$x)
lines(arima_fit$fitted, col = "red", lwd = 5)
arima_fit$fitted
library(shiny)
library(forecast)
library(xts)
data <- read.csv("random_data.csv", sep = ",")
data$date <- as.Date(data$date) # make sure date column is in Date format
data$date <- as.Date(data$date) # make sure date column is in Date format
plot(data$date, data$r, type = "o", xlab = "Date", ylab = "Interest Rate Value (r)")
# Fit ARIMAX model to data
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data$x)
View(data)
plot(data$Date, data$r, type = "o", xlab = "Date", ylab = "Interest Rate Value (r)")
plot(data$Date, data$r, type = "o", xlab = "Date", ylab = "Interest Rate Value (r)")
source("~/.active-rstudio-document", echo=TRUE)
data$date <- as.Date(data$Sate) # make sure date column is in Date format
data$date <- as.Date(data$Date) # make sure date column is in Date format
plot(data$Date, data$r, type = "o", xlab = "Date", ylab = "Interest Rate Value (r)")
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$date), max(data$date)),
ylim = c(0, max(data$r) * 1.1))
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$date), max(data$date)),
ylim = c(0, max(data$r) * 1.1))
data$date <- as.Date(data$Date) # make sure date column is in Date format
data$Date <- as.Date(data$Date) # make sure date column is in Date format
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$date), max(data$date)),
ylim = c(0, max(data$r) * 1.1))
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$Date), max(data$Date)),
ylim = c(0, max(data$r) * 1.1))
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$Date), max(data$Date)),
ylim = c(0, max(data$r) * 1.1))
data <- read.csv("random_data.csv", sep = ",")
data$Date <- as.Date(data$Date, format = "%d/%m/%Y") # make sure date column is in Date format
plot(data$Date, data$r, type = "o",
xlab = "Date", ylab = "Interest Rate Value (r)",
xlim = c(min(data$Date), max(data$Date)),
ylim = c(0, max(data$r) * 1.1))
# Fit ARIMAX model to data
arima_fit <- arima(data$r, order = c(1, 0, 1), xreg = data$x)
# Plot fitted values
lines(data$date, arima_fit$fitted, col = "red", lwd = 5)
runApp('TS-Analysis.R')
runApp('TS-Analysis.R')
print(arima_fit$fitted)
runApp('TS-Analysis.R')
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
View(arima_fit)
runApp('TS-Analysis.R')
library(shiny)
library(forecast)
ui <- fluidPage(
titlePanel("Prediction of Interest Rate Value r - ARIMAX Model"),
sidebarLayout(
sidebarPanel(
fileInput("file1", "Upload a CSV file with the data",
accept = c(".csv")),
checkboxInput("header", "Header", TRUE),
radioButtons("sep", "Separator",
choices = c(Comma = ",", Semicolon = ";", Tab = "\t"),
selected = ","),
numericInput("number",
label = "Enter the value of x for which you want to predict r. The predicted value of the interest rate for the selected x value will be displayed below the graph",
value = ""),
br(),
checkboxInput("line", "Display the fitted line?", value = TRUE)
),
mainPanel(
plotOutput("plot1", click = "plot_click"),
br(),
strong(textOutput("selected_x"))
)
)
)
server <- function(input, output) {
data <- reactive({
req(input$file1)
df <- read.csv(input$file1$datapath, header = input$header, sep = input$sep)
df
})
output$plot1 <- renderPlot({
plot(data()$x, data()$r,
xlim = c(0, 10),
ylim = c(0, 10), col = "blue")
if(input$line) {
lm_fit <- lm(r ~ x, data = data())
abline(lm_fit)
arima_fit <- arima(data()$r, order = c(1, 0, 1), xreg = data()$x)
print(arima_fit$fitted)
lines(data()$x, col = "red")
legend("bottomright", legend = c("r", "ARIMAX Fit"),
col = c("blue","red"), lty = 1)
}
})
output$selected_x <- renderText({
arima_fit <- arima(data()$r, order = c(1,1,0), xreg = data()$x)
pred_value <- predict(arima_fit, n.ahead = 1, newxreg = data.frame(x = as.numeric(input$number)))
paste("Predicted value of the interest rate r for the selected x value: ", pred_value$pred)
})
}
shinyApp(ui = ui, server = server)
